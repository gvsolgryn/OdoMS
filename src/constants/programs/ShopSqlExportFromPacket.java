/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package constants.programs;

import javax.swing.JOptionPane;

import constants.GameConstants;
import packet.transfer.read.ByteStream;
import packet.transfer.read.ReadingMaple;
import tools.FileoutputUtil;
import tools.HexTool;

/**
 *
 * @author rjsek
 */
public class ShopSqlExportFromPacket extends javax.swing.JFrame
{

	/**
	 * Creates new form ShopSqlExportFromPacket
	 */
	public ShopSqlExportFromPacket()
	{
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents()
	{

		jButton1 = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTextArea1 = new javax.swing.JTextArea();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jButton1.setText("Export");
		jButton1.addActionListener(new java.awt.event.ActionListener()
		{
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				jButton1ActionPerformed(evt);
			}
		});

		jTextArea1.setColumns(20);
		jTextArea1.setRows(5);
		jScrollPane1.setViewportView(jTextArea1);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addContainerGap()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING,
										javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
								.addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addContainerGap()));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addContainerGap()
						.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton1,
								javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap()));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)
	{// GEN-FIRST:event_jButton1ActionPerformed
		String t = this.jTextArea1.getText();
		ReadingMaple rm = new ReadingMaple(new ByteStream(HexTool.getByteArrayFromHexString(t)));
		rm.skip(5);
		int npcid = rm.readInt();
		rm.skip(16);
		int size = rm.readShort();
		String shops = "INSERT INTO `shops` (`npcid`,`usage`) VALUES (" + npcid + ",'');\r\n\r\n";
		String shopdata = "INSERT INTO `shopitems` (`shopid`,`itemid`,`price`,`position`,`pricequantity`,`Tab`,`quantity`,`period`) VALUES\r\n";
		try
		{
			for (int i = 0; i < size; i++)
			{
				int itemid = rm.readInt();
				int tab = rm.readInt();
				int c2 = rm.readInt();
				int c3 = rm.readInt();
				int price = rm.readInt();
				int coin = rm.readInt();
				int coinquantity = rm.readInt();
				int period = rm.readInt();
				int v2 = rm.readInt();
				int v3 = rm.readInt();
				boolean b1 = rm.readByte() == 1;
				if (b1)
				{
					rm.readInt();
					rm.readByte();
					rm.readByte();
					rm.readMapleAsciiString();
					rm.readInt();
					rm.readMapleAsciiString();
					rm.readLong();
					rm.readLong();
					rm.readMapleAsciiString();
					int s1 = rm.readInt();
					for (int j = 0; j < s1; j++)
					{
						rm.readLong();
					}
				}
				rm.readInt();
				int v1 = rm.readInt();
				short v5 = rm.readShort();
				short v6 = rm.readShort();
				byte b2 = rm.readByte();
				if (b2 != 0)
				{
					if (b2 == 1 || b2 == 3 || b2 == 4)
					{
						int ss = rm.readInt();
						for (int j = 0; j < ss; j++)
						{
							rm.readLong();
						}
					}
				}
				rm.readByte();
				rm.readLong();
				rm.readLong();
				rm.readInt();
				rm.readShort();
				rm.readInt();
				rm.readMapleAsciiString();
				rm.readInt();
				rm.readByte();
				short quantity = 0;
				short buyable = 0;
				if (!GameConstants.isThrowingStar(itemid) && !GameConstants.isBullet(itemid))
				{
					quantity = rm.readShort();
					buyable = rm.readShort();
				}
				else
				{
					rm.skip(6);
					quantity = rm.readShort();
					buyable = rm.readShort();
				}
				shopdata += "(" + npcid + "," + itemid + "," + (coin > 0 ? coin : price) + "," + i + "," + coinquantity
						+ "," + tab + "," + quantity + "," + period + ")" + (i == size - 1 ? ";" : ",\r\n");
				rm.skip(9);
			}
		}
		catch (Exception ex)
		{

		}
		JOptionPane.showMessageDialog(null, "¿Ï·á");
		FileoutputUtil.logToFile_("Shop_" + npcid + ".sql", shops + shopdata);
	}// GEN-LAST:event_jButton1ActionPerformed

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[])
	{
		java.awt.EventQueue.invokeLater(new Runnable()
		{
			public void run()
			{
				new ShopSqlExportFromPacket().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton jButton1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTextArea jTextArea1;
	// End of variables declaration//GEN-END:variables
}
